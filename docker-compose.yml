version: '3.8'

services:
  # Web Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: culture_radar_app
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./uploads:/var/www/html/uploads
      - ./logs:/var/log/apache2
    environment:
      - APP_ENV=production
      - DB_HOST=database
      - DB_NAME=culture_radar
      - DB_USER=culture_user
      - DB_PASS=secure_password_here
    depends_on:
      - database
      - redis
    networks:
      - culture_radar_network

  # MySQL Database
  database:
    image: mysql:8.0
    container_name: culture_radar_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password_here
      MYSQL_DATABASE: culture_radar
      MYSQL_USER: culture_user
      MYSQL_PASSWORD: secure_password_here
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - culture_radar_network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: culture_radar_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password_here
    networks:
      - culture_radar_network

  # phpMyAdmin (Development only)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: culture_radar_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_USER: culture_user
      PMA_PASSWORD: secure_password_here
    depends_on:
      - database
    networks:
      - culture_radar_network
    profiles:
      - development

  # Nginx Load Balancer (Production)
  nginx:
    image: nginx:alpine
    container_name: culture_radar_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - culture_radar_network
    profiles:
      - production

  # AI Training Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    container_name: culture_radar_scheduler
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      - ./logs:/var/log/scheduler
    environment:
      - APP_ENV=production
      - DB_HOST=database
      - DB_NAME=culture_radar
      - DB_USER=culture_user
      - DB_PASS=secure_password_here
    depends_on:
      - database
      - app
    networks:
      - culture_radar_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  culture_radar_network:
    driver: bridge